{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Header/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","alt","name","src","image","onClick","flipCards","id","onMouseDown","addColorTitle","score","onMouseUp","addColorTitleBack","className","Wrapper","children","Title","class","href","color","headTitle","topScore","Header","App","state","friends","list","titleClass","_this","sort","Math","random","newScore","includes","listReset","concat","Object","toConsumableArray","newTopScore","setState","console","log","colorTitle","_this2","this","components_Wrapper","components_Title","components_Header","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.71570e0e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n\n  return (\n    \n    <div >\n      <div >\n        <img alt={props.name} \n        src={props.image} \n        onClick={() => props.flipCards(props.id)} \n       onMouseDown={() => props.addColorTitle(props.score)} \n        onMouseUp={() => props.addColorTitleBack(props.score)\n        }\n        className=\"click-item\"   \n        />\n      </div>\n      \n     \n     \n    </div>\n  \n  );\n}\n//since our event handlers need to be callbacks, we normally\n//can't pass in arguments without invoking them right away. \n//But by wrapping the removeFriend method in an another function, \n//we can pass the id prop into the inner removeFriend method. \n//When the span is clicked, it calls the anonymous callback function, which then calls the removeFriend method with the friend's id as an argument.\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className={props.className} >{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n  \n    <nav class=\"navbar\">\n      <ul>\n        <li class=\"brand\"><a href=\"/\">Clicky Game</a></li>\n        <li class={props.color}>{props.headTitle}</li>\n        <li> Score {props.score} | Top Score {props.topScore}</li>\n      </ul>\n            \n    </nav>\n   \n\n\n  )\n\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return (\n    <header class=\"header\"><h1>Clicky Game!</h1>\n    <h2>Click on an image to earn points</h2>\n    <h2> but don't click on any </h2>\n      <h2>more than once!</h2>\n  \n    </header>\n  \n  )\n\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Header from \"./components/Header\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n \n  state = {\n    friends,\n    list: [],\n    score: 0,\n    topScore: 0,\n    titleClass: \"\",\n    headTitle:\"Click an Image to Begin!\"\n  };\n\n\n\n  flipCards = id => {\n\n\n    //Random Cards Function\n    const friendsRandom = arr => arr.sort(() => Math.random() - 0.5)\n\n    //Random the cards\n    const friends = friendsRandom(this.state.friends);\n\n    //set new score to 0 if the id already on clicked array of ids\n    const newScore = this.state.list.includes(id) ? 0 : this.state.score + 1\n\n    //Reset my clicked array of ids every time I lost\n    const listReset = newScore === 0 ? [] : [...this.state.list, id]\n\n    //keep track on newTopScore evely time my TopScore is behind the currentScore\n    const newTopScore = this.state.topScore < newScore ? newScore : this.state.topScore\n\n    this.setState({\n      friends,\n      list: listReset,\n      score: newScore,\n      topScore: newTopScore\n    });\n  \n    console.log(\"First Time\" , newScore)\n   if ( newScore === 0)  \n   { \n    this.setState({ \n      headTitle: \"You Guess incorrectly!\" ,\n   \n      })\n     console.log(\"Back\")\n  \n    }   else {\n      this.setState({ \n        headTitle: \"You Guess correctly!\",\n    })\n    \n    this.addColorTitleBack(newScore)\n   }\n   \n  };\n\n\n  addColorTitle = (score) => {\n    \n    //Change the color of the title \n    const colorTitle = score === 0 ? \"titleChangw\" : \"titleChange\";\n   \n    this.setState({\n      titleClass: colorTitle\n    })\n\n  }\n  addColorTitleBack = (score) => {\n   //change back to white\n    const colorTitle = score === 0 ? \"titleChange\" : \"titleChangeBack\";\n\n    this.setState({\n      titleClass: colorTitle\n    })\n\n  }\n  \n  render() {\n    return (\n      <Wrapper>\n\n        <Title\n          score={this.state.score}\n          topScore={this.state.topScore}\n          color={this.state.titleClass}\n          headTitle={this.state.headTitle}\n        >\n        </Title>\n        <Header></Header>\n        <Wrapper className = \"container\">\n          {this.state.friends.map(friend => (\n           <FriendCard\n            flipCards={this.flipCards}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            addColorTitle={this.addColorTitle}\n            addColorTitleBack={this.addColorTitleBack}\n            score={this.state.score}\n\n          />\n\n        ))}\n   \n        </Wrapper>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}